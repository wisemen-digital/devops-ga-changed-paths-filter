---
name: Generate Deployment Matrix
description: |
  Generates a deployment matrix based on changed files (using a pre-defined filter). For each
  matched path it will try to lookup the environment, or default to the provided default
  environment.
inputs:
  filter-file:
    description: Path to the filter file
    required: true
  changes-override:
    description: Override the changes filter and provide your own set of paths (comma separated)
    required: false
  default-environment:
    description: Default environment (fallback value if no env. is provided for a path)
    required: false
    default: Default
outputs:
  matrix:
    description: List of combinations of paths & environments
    value: ${{ steps.matrix-generator.outputs.matrix }}

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    # Collect changed paths
    - name: Collect changes
      if: "${{ inputs.changes-override == '' }}"
      id: filtered
      uses: dorny/paths-filter@v3
      with:
        filters: ${{ inputs.filter-file }}
    - name: Collect changes
      if: "${{ inputs.changes-override != '' }}"
      id: custom
      shell: bash
      run: |
        echo "changes=`echo '${{ inputs.changes-override }}' | \
          jq 'split(",")' -Rc`" >> "$GITHUB_OUTPUT"
    # Post process into actual matrix
    - name: Generate Matrix
      id: matrix-generator
      shell: bash
      run: |
        CHANGED_PATHS='${{ steps.custom.outputs.changes || steps.filtered.outputs.changes }}'

        # Convert our filters file into a lookup map, so we can map a path to
        # an environment. Then map each change entry to it's corresponding
        # environment and create the necessary matrix array structure
        echo "matrix=`yq ea -o json '
          select(fileIndex == 1) as $filters |
          $filters |= keys |
          $filters |= map(. | capture("(?:(?<value>\\w+)\\|)?(?<key>[\\w\\-_\\/]+)")) |
          $filters |= from_entries |

          select(fileIndex == 0) |
          map(. |
            capture("(?:(?<environment>\\w+)\\|)?(?<path>[\\w\\-_\\/]+)") |
            {
              "environment": .environment // "${{ inputs.default-environment }}",
              "path": .path
            })
          ' <(echo $CHANGED_PATHS) ${{ inputs.filter-file }} | jq -c`" >> "$GITHUB_OUTPUT"
